# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-11-06 17:53
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('administrator', '0001_initial'),
        ('reader', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllBook',
            fields=[
                ('book_id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('is_available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='AutoUpdateDB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_updated', models.BooleanField()),
                ('updated_date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.IntegerField(null=True, unique=True)),
                ('author', models.CharField(max_length=50)),
                ('total_num', models.IntegerField()),
                ('available_num', models.IntegerField()),
                ('book_name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('A', '教育'), ('B', '计算机'), ('C', '文学'), ('D', '哲学'), ('E', '语言'), ('F', '历史'), ('G', '政治'), ('H', '经济'), ('I', '其他')], max_length=1)),
                ('place', models.CharField(max_length=50)),
                ('image_url', models.CharField(default='None', max_length=100)),
                ('price', models.CharField(default='100', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BookDelHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_id', models.IntegerField()),
                ('book_isbn', models.IntegerField()),
                ('book_name', models.CharField(max_length=100)),
                ('book_author', models.CharField(max_length=50)),
                ('deleted_time', models.DateTimeField(auto_now_add=True)),
                ('del_reason', models.CharField(choices=[('D', 'DAMAGED'), ('L', 'LOST')], max_length=1)),
                ('librarian', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deleted_books', to='administrator.Administrator')),
            ],
        ),
        migrations.CreateModel(
            name='BorrowOrder',
            fields=[
                ('order_id', models.IntegerField(auto_created=True, primary_key=True, serialize=False)),
                ('borrow_time', models.DateTimeField()),
                ('debt', models.IntegerField(default=0)),
                ('return_time', models.DateTimeField(null=True)),
                ('is_return', models.BooleanField()),
                ('expire', models.BooleanField(default=False)),
                ('is_alert', models.BooleanField(default=False)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='librarian.AllBook')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borrow_orders', to='reader.User')),
            ],
        ),
        migrations.CreateModel(
            name='MoneyOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.CharField(choices=[('D', 'DEPOSIT'), ('F', 'FINE')], max_length=1)),
                ('num', models.IntegerField()),
                ('order_time', models.DateTimeField(auto_now_add=True)),
                ('librarian', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='money_orders', to='administrator.Administrator')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='money_orders', to='reader.User')),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField(max_length=2000)),
                ('issue_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notices', to='administrator.Administrator')),
            ],
        ),
        migrations.CreateModel(
            name='ReserveOrder',
            fields=[
                ('order_id', models.IntegerField(primary_key=True, serialize=False)),
                ('borrow_time', models.DateTimeField()),
                ('successful', models.BooleanField()),
                ('expire', models.BooleanField(default=False)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reserve_orders', to='librarian.AllBook')),
                ('the_book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reserve_orders', to='librarian.Book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reserve_orders', to='reader.User')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('books_limit', models.IntegerField()),
                ('days_limit', models.IntegerField()),
                ('deposit', models.IntegerField()),
                ('fine', models.IntegerField()),
            ],
        ),
        migrations.AddField(
            model_name='allbook',
            name='the_book',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='all_books', to='librarian.Book'),
        ),
    ]
